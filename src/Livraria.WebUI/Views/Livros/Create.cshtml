@model Livraria.Application.DTOs.LivroDTO

@{
    ViewData["Title"] = "Cadastrar um Livro";
    var assuntos = ViewBag.Assuntos as IEnumerable<Livraria.Application.DTOs.AssuntoDTO>;
    var canaisVenda = ViewBag.CanaisVenda as IEnumerable<Livraria.Application.DTOs.CanalVendaDTO>;
    var autores = ViewBag.Autores as IEnumerable<Livraria.Application.DTOs.AutorDTO>;
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Create" method="post">
    <div class="form-horizontal">
        <hr />
        <div asp-validation-summary="All" class="text-danger"></div>

        <!-- Campos do livro -->
        <div class="form-group">
            <label asp-for="Titulo" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Titulo" class="form-control" />
                <span asp-validation-for="Titulo" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Editora" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Editora" class="form-control" />
                <span asp-validation-for="Editora" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Edicao" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Edicao" class="form-control" />
                <span asp-validation-for="Edicao" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="AnoPublicacao" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="AnoPublicacao" class="form-control" />
                <span asp-validation-for="AnoPublicacao" class="text-danger"></span>
            </div>
        </div>

        <!-- Combos de Assunto, CanalVenda e Autor -->
        <div class="form-group mt-4">
            <label class="col-md-2 control-label font-weight-bold">Assuntos</label>
            <div class="col-md-10">
                <select id="livroAssuntos" name="LivroAssuntos[]" class="form-control" multiple>
                    @foreach (var assunto in assuntos)
                    {
                        <option value="@assunto.Id">@assunto.Descricao</option>
                    }
                </select>
                <span asp-validation-for="LivroAssuntos" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group mt-4">
            <label class="col-md-2 control-label font-weight-bold">Autores</label>
            <div class="col-md-10">
                <select id="livroAutores" name="LivroAutores" class="form-control" multiple>
                    @foreach (var autor in autores)
                    {
                        <option value="@autor.Id">@autor.Nome</option>
                    }
                </select>
                <span asp-validation-for="LivroAutores" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group mt-4">
            <label class="col-md-2 control-label font-weight-bold">Canais de Venda e Preço</label>
            <div class="col-md-10">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Canal de Venda</th>
                            <th>Preço</th>
                        </tr>
                    </thead>
                    <tbody id="precosTabela">
                        <tr>
                            <td>
                                <select name="LivroPrecoCanalVenda[0].CanalVendaId" class="form-control">
                                    @foreach (var canalVenda in canaisVenda)
                                    {
                                        <option value="@canalVenda.Id">@canalVenda.NomeCanal</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <input type="text" name="LivroPrecoCanalVenda[0].Preco" class="form-control preco" />
                            </td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="2">
                                <button type="button" class="btn btn-primary" id="addPrecoRow">Adicionar Preço</button>
                            </td>
                        </tr>
                    </tfoot>
                </table>
                <span asp-validation-for="LivroPrecoCanalVenda" class="text-danger"></span>
            </div>
        </div>

        <!-- Campos hidden para dados serializados -->
        <input type="hidden" id="livroAssuntosHidden" name="LivroAssuntosJson" />
        <input type="hidden" id="livroAutoresHidden" name="LivroAutoresJson" />
        <input type="hidden" id="livroPrecoCanalVendaHidden" name="LivroPrecoCanalVendaJson" />

        <!-- Botões -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cadastrar" class="btn btn-success" />
                <a asp-action="Index" class="btn btn-info">Menu livros</a>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>
    <script type="text/javascript">
        // Máscara para campos de preço
        $(document).ready(function () {
            $('.preco').mask('000.000.000.000.000,00', { reverse: true });
        });

        // Adiciona novas linhas para preços
        document.getElementById('addPrecoRow').addEventListener('click', function () {
            var table = document.getElementById('precosTabela');
            var rowCount = table.rows.length;
            var row = table.insertRow();
            row.innerHTML = `
                <td>
                    <select name="LivroPrecoCanalVenda[${rowCount}].CanalVendaId" class="form-control">
                        @foreach (var canalVenda in ViewBag.CanaisVenda as IEnumerable<Livraria.Application.DTOs.CanalVendaDTO>)
                        {
                            <option value="@canalVenda.Id">@canalVenda.NomeCanal</option>
                        }
                    </select>
                </td>
                <td>
                    <input type="text" name="LivroPrecoCanalVenda[${rowCount}].Preco" class="form-control preco" />
                </td>
            `;
            // Reaplica a máscara para a nova linha
            $('.preco').mask('000.000.000.000.000,00', { reverse: true });
        });

        // Validação ao submeter o formulário
        document.querySelector('form').addEventListener('submit', function (event) {
            // Valida se há pelo menos uma linha na tabela de preços
            var rows = document.getElementById('precosTabela').getElementsByTagName('tr');
            var hasPrices = Array.from(rows).some(row => row.getElementsByTagName('td')[1].getElementsByTagName('input')[0].value.trim() !== '');

            if (!hasPrices) {
                event.preventDefault();
                alert('Você deve inserir pelo menos um preço.');
            }

            // Captura os dados dos campos de seleção
            var assuntos = Array.from(document.getElementById('livroAssuntos').selectedOptions)
                .map(option => option.value);
            var autores = Array.from(document.getElementById('livroAutores').selectedOptions)
                .map(option => option.value);

            // Captura os dados da tabela
            var precos = [];
            for (var i = 0; i < rows.length; i++) {
                var cells = rows[i].getElementsByTagName('td');
                if (cells.length > 0) {
                    var canalVendaId = parseInt(cells[0].getElementsByTagName('select')[0].value, 10);
                    var preco = parseFloat(cells[1].getElementsByTagName('input')[0].value.replace(/\./g, '').replace(',', '.'));
                    if (!isNaN(preco)) {
                        precos.push({ CanalVenda_CodCanal: canalVendaId, PrecoVenda: preco });
                    }
                }
            }

            // Serializa os dados para JSON
            document.getElementById('livroAssuntosHidden').value = JSON.stringify(assuntos);
            document.getElementById('livroAutoresHidden').value = JSON.stringify(autores);
            document.getElementById('livroPrecoCanalVendaHidden').value = JSON.stringify(precos);
        });
    </script>
}


